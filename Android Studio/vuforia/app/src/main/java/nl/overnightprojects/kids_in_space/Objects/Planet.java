package nl.overnightprojects.kids_in_space.Objects;

import java.nio.Buffer;

import nl.overnightprojects.kids_in_space.Utils.MeshObject;

public class Planet extends MeshObject {
    private Buffer mVertBuff;
    private Buffer mTexCoordBuff;
    private Buffer mNormBuff;
    private Buffer mIndBuff;

    private int indicesNumber = 0;
    private int verticesNumber = 0;

    public Planet() {
        setVerts();
        setTexCoords();
        setNorms();
        setIndices();
    }

    private void setVerts() {
        double[] OBJECT_VERTS = {
                0.000000f, 64.000000f, 0.000000f, 13.003520f, 66.051200f, 9.447552f, -4.966784f, 66.051200f, 15.286528f, 46.310912f, 99.377920f, 33.646464f, 39.010944f, 85.918848f, 28.342784f, 52.014720f, 95.852800f, 18.895232f, -16.073344f, 66.051328f, 0.000000f, -4.966784f, 66.051200f, -15.286528f, 13.003520f, 66.051200f, -9.447552f, 55.084672f, 111.926400f, 28.342912f, -17.688832f, 99.377920f, 54.441600f, -1.896960f, 95.852672f, 55.307776f, -9.933824f, 111.926272f, 61.147008f, -57.243264f, 99.378176f, 0.000000f, -53.187200f, 95.852928f, 15.286656f, -61.224064f, 111.926400f, 9.447552f, -17.688832f, 99.377920f, -54.441600f, -30.974208f, 95.852672f, -45.860096f, -27.904384f, 111.926272f, -55.308032f, 46.310912f, 99.377920f, -33.646464f, 34.044160f, 95.852672f, -43.629568f, 43.978112f, 111.926272f, -43.629824f, 43.978112f, 111.926272f, 43.629824f, -27.904384f, 111.926272f, 55.308032f, -61.224064f, 111.926400f, -9.447552f, -9.933824f, 111.926272f, -61.147008f, 55.084672f, 111.926400f, -28.342912f, 17.688832f, 156.622080f, 54.441600f, 30.974208f, 160.147328f, 45.860096f, 14.900608f, 170.081280f, 45.860096f, -46.310912f, 156.622080f, 33.646464f, -34.044160f, 160.147328f, 43.629568f, -39.010944f, 170.081152f, 28.342784f, -46.310912f, 156.622080f, -33.646464f, -52.014720f, 160.147200f, -18.895232f, -39.010944f, 170.081152f, -28.342784f, 17.688832f, 156.622080f, -54.441600f, 1.896960f, 160.147328f, -55.307776f, 14.900608f, 170.081280f, -45.860096f, 57.243264f, 156.621824f, 0.000000f, 53.187200f, 160.147072f, -15.286656f, 48.220288f, 170.080896f, 0.000000f, 16.073344f, 189.948672f, 0.000000f, 4.966784f, 189.948800f, -15.286528f, 0.000000f, 192.000000f, 0.000000f, 33.646720f, 182.441728f, 0.000000f, 23.155200f, 185.243520f, -16.823168f, 40.844416f, 174.311040f, -16.823296f, 10.397184f, 182.441856f, -31.999744f, 28.621440f, 174.311168f, -33.646592f, 44.044160f, 161.647104f, -31.999744f, 30.974208f, 160.147328f, -45.860096f, -13.003520f, 189.948800f, -9.447552f, -8.844672f, 185.243520f, -27.220480f, -3.378560f, 174.311168f, -44.043776f, -27.220608f, 182.441856f, -19.776768f, -23.155456f, 174.311168f, -37.617792f, -16.823552f, 161.647232f, -51.776768f, -34.044160f, 160.147328f, -43.629568f, -13.003520f, 189.948800f, 9.447552f, -28.621440f, 185.243520f, 0.000000f, -42.932224f, 174.311040f, -10.397312f, -28.621440f, 185.243520f, 0.000000f, -27.220608f, 182.441856f, 19.776768f, -42.932224f, 174.311040f, -10.397312f, -42.932224f, 174.311040f, 10.397312f, -52.014720f, 160.147200f, -18.895232f, -54.441472f, 161.647104f, 0.000000f, -52.014720f, 160.147200f, 18.895232f, 4.966784f, 189.948800f, 15.286528f, -8.844672f, 185.243520f, 27.220480f, -23.155456f, 174.311168f, 37.617792f, 10.397184f, 182.441856f, 31.999744f, -3.378560f, 174.311168f, 44.043776f, -16.823552f, 161.647232f, 51.776768f, 1.896960f, 160.147328f, 55.307776f, 23.155200f, 185.243520f, 16.823168f, 28.621440f, 174.311168f, 33.646592f, 40.844416f, 174.311040f, 16.823296f, 44.044160f, 161.647104f, 31.999744f, 53.187200f, 160.147072f, 15.286656f, 61.224064f, 144.073600f, -9.447552f, 60.867712f, 128.000000f, -19.776768f, 55.155456f, 145.689344f, -27.220608f, 51.777280f, 128.000000f, -37.618048f, 42.932480f, 145.689472f, -44.044160f, 37.618304f, 128.000000f, -51.777024f, 27.904384f, 144.073728f, -55.308032f, 9.933824f, 144.073728f, -61.147008f, 0.000000f, 128.000000f, -64.000000f, -8.844672f, 145.689344f, -60.867584f, -19.777024f, 128.000000f, -60.867584f, -28.621824f, 145.689472f, -54.441472f, -37.618304f, 128.000000f, -51.777024f, -43.978112f, 144.073728f, -43.629824f, -55.084672f, 144.073600f, -28.342912f, -60.867712f, 128.000000f, -19.776768f, -60.621696f, 145.689344f, -10.397312f, -64.000000f, 128.000000f, 0.000000f, -60.867712f, 128.000000f, -19.776768f, -60.621696f, 145.689344f, -10.397312f, -60.621568f, 145.689344f, 10.397312f, -60.867712f, 128.000000f, 19.776768f, -55.084672f, 144.073600f, 28.342912f, -43.978112f, 144.073728f, 43.629824f, -37.618304f, 128.000000f, 51.777024f, -28.621824f, 145.689344f, 54.441472f, -19.777152f, 128.000000f, 60.867584f, -8.844800f, 145.689344f, 60.867584f, 0.000000f, 128.000000f, 64.000000f, 9.933824f, 144.073728f, 61.147008f, 27.904384f, 144.073728f, 55.308032f, 37.618304f, 128.000000f, 51.777024f, 42.932480f, 145.689344f, 44.044160f, 51.777152f, 127.999872f, 37.618048f, 55.155456f, 145.689216f, 27.220736f, 60.867712f, 128.000000f, 19.776768f, 61.224064f, 144.073600f, 9.447552f, 19.777152f, 128.000000f, -60.867584f, 28.621824f, 110.310528f, -54.441472f, 8.844800f, 110.310528f, -60.867456f, 16.823552f, 94.352768f, -51.776768f, -1.896960f, 95.852672f, -55.307776f, -51.777152f, 128.000000f, -37.618176f, -42.932352f, 110.310528f, -44.044160f, -55.155456f, 110.310656f, -27.220736f, -61.224064f, 111.926400f, -9.447552f, -44.044160f, 94.352896f, -31.999744f, -53.187200f, 95.852928f, -15.286656f, -53.187200f, 95.852928f, -15.286656f, -51.777152f, 128.000000f, 37.618176f, -55.155456f, 110.310656f, 27.220736f, -42.932480f, 110.310528f, 44.044160f, -44.044160f, 94.352896f, 31.999744f, -30.974208f, 95.852672f, 45.860096f, 19.777152f, 128.000000f, 60.867584f, 8.844800f, 110.310528f, 60.867456f, 28.621824f, 110.310528f, 54.441472f, 16.823552f, 94.352768f, 51.776768f, 34.044160f, 95.852672f, 43.629568f, 64.000000f, 128.000000f, 0.000000f, 60.621696f, 110.310656f, 10.397312f, 60.621696f, 110.310656f, -10.397312f, 54.441472f, 94.352896f, 0.000000f, 52.014720f, 95.852800f, -18.895232f, 39.010944f, 85.918848f, -28.342784f, 27.220608f, 73.558144f, -19.776768f, 23.155456f, 81.688832f, -37.617920f, 8.844544f, 70.756480f, -27.220608f, 3.378560f, 81.688960f, -44.043904f, -10.397184f, 73.558144f, -31.999744f, -14.900608f, 85.918720f, -45.860096f, -28.621440f, 81.688832f, -33.646592f, -23.155328f, 70.756608f, -16.823168f, -40.844416f, 81.688960f, -16.823168f, -33.646720f, 73.558272f, 0.000000f, -33.646720f, 73.558272f, 0.000000f, -48.220288f, 85.919104f, 0.000000f, -40.844416f, 81.688960f, -16.823168f, -40.844416f, 81.688960f, 16.823296f, -16.073344f, 66.051328f, 0.000000f, -23.155328f, 70.756608f, 16.823296f, -28.621440f, 81.688960f, 33.646592f, -4.966784f, 66.051200f, 15.286528f, -10.397184f, 73.558144f, 31.999744f, -14.900608f, 85.918720f, 45.860096f, 42.932352f, 81.688960f, -10.397184f, 42.932352f, 81.688960f, 10.397312f, 28.621440f, 70.756608f, 0.000000f, 27.220608f, 73.558144f, 19.776768f, 3.378560f, 81.688832f, 44.043904f, 8.844672f, 70.756480f, 27.220480f, 23.155456f, 81.688960f, 37.617920f, 13.003520f, 66.051200f, 9.447552f,
        };
        mVertBuff = fillBuffer(OBJECT_VERTS);
        verticesNumber = OBJECT_VERTS.length / 3;
    }

    private void setTexCoords() {
        double[] OBJECT_TEX_COORDS = {
                0.747633f, 0.119682f, 0.764304f, 0.035500f, 0.791794f, 0.129852f, 0.476578f, 0.185952f, 0.469954f, 0.099997f, 0.510197f, 0.162070f, 0.761184f, 0.200915f, 0.723777f, 0.188116f, 0.700104f, 0.099776f, 0.494973f, 0.254373f, 0.364428f, 0.338335f, 0.381440f, 0.277068f, 0.384057f, 0.378258f, 0.279401f, 0.485947f, 0.297233f, 0.444187f, 0.294272f, 0.545053f, 0.691185f, 0.457167f, 0.711525f, 0.459977f, 0.697091f, 0.540480f, 0.604789f, 0.283842f, 0.628279f, 0.307837f, 0.607378f, 0.370396f, 0.464208f, 0.264904f, 0.362193f, 0.424963f, 0.270841f, 0.564925f, 0.674701f, 0.507746f, 0.583823f, 0.326348f, 0.441185f, 0.542833f, 0.461525f, 0.540023f, 0.448140f, 0.624956f, 0.354789f, 0.716158f, 0.378279f, 0.692163f, 0.369503f, 0.789731f, 0.726578f, 0.814048f, 0.760197f, 0.837930f, 0.719954f, 0.900003f, 0.614428f, 0.661665f, 0.631439f, 0.722932f, 0.601558f, 0.735482f, 0.529401f, 0.514053f, 0.547233f, 0.555813f, 0.525357f, 0.599445f, 0.511184f, 0.799085f, 0.541794f, 0.870148f, 0.497633f, 0.880319f, 0.519667f, 0.699866f, 0.544573f, 0.768971f, 0.546183f, 0.657140f, 0.579238f, 0.814128f, 0.573117f, 0.708001f, 0.569221f, 0.601268f, 0.592876f, 0.638908f, 0.514304f, 0.964500f, 0.593866f, 0.917900f, 0.620940f, 0.819364f, 0.680631f, 0.995711f, 0.661426f, 0.889646f, 0.657914f, 0.782173f, 0.693192f, 0.815463f, 0.450104f, 0.900224f, 0.888139f, 0.970558f, 0.785493f, 0.928456f, 0.388139f, 0.970558f, 0.398575f, 0.863703f, 0.285493f, 0.928456f, 0.345542f, 0.873275f, 0.260197f, 0.837930f, 0.302205f, 0.825271f, 0.335009f, 0.775237f, 0.473777f, 0.811884f, 0.435987f, 0.803520f, 0.401382f, 0.756170f, 0.458289f, 0.720469f, 0.428779f, 0.693921f, 0.402893f, 0.648520f, 0.424473f, 0.593915f, 0.489660f, 0.722623f, 0.473364f, 0.628629f, 0.501045f, 0.619157f, 0.485465f, 0.533422f, 0.509295f, 0.523849f, 0.544272f, 0.454947f, 0.562784f, 0.387435f, 0.566020f, 0.494347f, 0.586940f, 0.426992f, 0.589959f, 0.538214f, 0.609844f, 0.472704f, 0.612193f, 0.575037f, 0.634057f, 0.621742f, 0.655044f, 0.566858f, 0.656220f, 0.674539f, 0.678987f, 0.607528f, 0.684840f, 0.717261f, 0.704586f, 0.638494f, 0.714208f, 0.735096f, 0.744973f, 0.745627f, 0.759617f, 0.657042f, 0.776291f, 0.747018f, 0.286944f, 0.641837f, 0.259617f, 0.657042f, 0.276291f, 0.747018f, 0.308753f, 0.719261f, 0.312784f, 0.612565f, 0.333823f, 0.673652f, 0.357378f, 0.629605f, 0.359844f, 0.527296f, 0.380337f, 0.591067f, 0.382259f, 0.479395f, 0.404011f, 0.540835f, 0.405044f, 0.433142f, 0.424701f, 0.492254f, 0.447091f, 0.459520f, 0.454586f, 0.361506f, 0.470643f, 0.446477f, 0.481745f, 0.344135f, 0.496909f, 0.437488f, 0.509617f, 0.342958f, 0.520841f, 0.435075f, 0.632259f, 0.520604f, 0.630337f, 0.408933f, 0.654011f, 0.459165f, 0.652893f, 0.351480f, 0.674473f, 0.406085f, 0.731745f, 0.655864f, 0.720643f, 0.553523f, 0.746909f, 0.562511f, 0.770841f, 0.564925f, 0.735465f, 0.466579f, 0.759295f, 0.476151f, 0.259295f, 0.476151f, 0.336940f, 0.573008f, 0.316020f, 0.505652f, 0.339959f, 0.461786f, 0.319221f, 0.398732f, 0.342876f, 0.361092f, 0.428987f, 0.392472f, 0.406220f, 0.325461f, 0.434840f, 0.282739f, 0.407914f, 0.217827f, 0.443192f, 0.184537f, 0.536944f, 0.358163f, 0.526291f, 0.252982f, 0.558753f, 0.280740f, 0.552205f, 0.174729f, 0.585009f, 0.224763f, 0.619503f, 0.210269f, 0.648575f, 0.136297f, 0.651382f, 0.243831f, 0.685987f, 0.196481f, 0.678779f, 0.306080f, 0.708289f, 0.279531f, 0.698140f, 0.375044f, 0.723364f, 0.371372f, 0.739660f, 0.277377f, 0.751046f, 0.380843f, 0.769667f, 0.300134f, 0.269667f, 0.300134f, 0.275357f, 0.400555f, 0.251046f, 0.380843f, 0.296183f, 0.342860f, 0.261184f, 0.200915f, 0.294573f, 0.231029f, 0.323117f, 0.292000f, 0.291794f, 0.129852f, 0.329238f, 0.185873f, 0.351558f, 0.264518f, 0.595542f, 0.126725f, 0.535492f, 0.071544f, 0.638138f, 0.029442f, 0.430631f, 0.004289f, 0.370940f, 0.180636f, 0.343866f, 0.082100f, 0.411426f, 0.110355f, 0.264304f, 0.035500f,
        };
        mTexCoordBuff = fillBuffer(OBJECT_TEX_COORDS);
    }

    private void setNorms() {
        double[] OBJECT_NORMS = {
                0.000000f, -1.000000f, 0.000000f, 0.210944f, -0.965392f, 0.153233f, -0.080569f, -0.965392f, 0.247963f, 0.723594f, -0.447218f, 0.525712f, 0.604205f, -0.664968f, 0.438978f, 0.815180f, -0.503800f, 0.285714f, -0.260750f, -0.965392f, 0.000000f, -0.080569f, -0.965392f, -0.247963f, 0.210944f, -0.965392f, -0.153233f, 0.864986f, -0.243049f, 0.438978f, -0.276376f, -0.447188f, 0.850642f, -0.019807f, -0.503800f, 0.863582f, -0.150212f, -0.243049f, 0.958281f, -0.894406f, -0.447188f, 0.000000f, -0.827418f, -0.503800f, 0.247963f, -0.957823f, -0.243049f, 0.153264f, -0.276376f, -0.447188f, -0.850642f, -0.491531f, -0.503800f, -0.710288f, -0.441725f, -0.243049f, -0.863582f, 0.723594f, -0.447218f, -0.525712f, 0.523637f, -0.503800f, -0.686972f, 0.684805f, -0.243049f, -0.686972f, 0.684805f, -0.243049f, 0.686972f, -0.441725f, -0.243049f, 0.863582f, -0.957823f, -0.243049f, -0.153264f, -0.150212f, -0.243049f, -0.958281f, 0.864986f, -0.243049f, -0.438978f, 0.276376f, 0.447188f, 0.850642f, 0.491531f, 0.503800f, 0.710288f, 0.230781f, 0.664968f, 0.710288f, -0.723594f, 0.447218f, 0.525712f, -0.523637f, 0.503800f, 0.686972f, -0.604205f, 0.664968f, 0.438978f, -0.723594f, 0.447218f, -0.525712f, -0.815180f, 0.503800f, -0.285714f, -0.604205f, 0.664968f, -0.438978f, 0.276376f, 0.447188f, -0.850642f, 0.019807f, 0.503800f, -0.863552f, 0.230781f, 0.664968f, -0.710288f, 0.894406f, 0.447188f, 0.000000f, 0.827448f, 0.503800f, -0.247963f, 0.746849f, 0.664937f, 0.000000f, 0.260750f, 0.965392f, 0.000000f, 0.080569f, 0.965392f, -0.247963f, 0.000000f, 0.999969f, 0.000000f, 0.525712f, 0.850642f, 0.000000f, 0.368175f, 0.890408f, -0.267495f, 0.631733f, 0.727531f, -0.267495f, 0.162450f, 0.850642f, -0.499985f, 0.449629f, 0.727531f, -0.518143f, 0.688162f, 0.525712f, -0.499985f, 0.491531f, 0.503800f, -0.710288f, -0.210944f, 0.965392f, -0.153264f, -0.140629f, 0.890408f, -0.432844f, -0.059206f, 0.727531f, -0.683493f, -0.425306f, 0.850642f, -0.309000f, -0.353832f, 0.727531f, -0.587725f, -0.262856f, 0.525712f, -0.808985f, -0.523637f, 0.503800f, -0.686972f, -0.210944f, 0.965392f, 0.153264f, -0.455123f, 0.890408f, 0.000000f, -0.668325f, 0.727531f, -0.154881f, -0.455123f, 0.890408f, 0.000000f, -0.425306f, 0.850642f, 0.309000f, -0.668325f, 0.727531f, -0.154881f, -0.668325f, 0.727531f, 0.154881f, -0.815180f, 0.503800f, -0.285714f, -0.850642f, 0.525712f, 0.000000f, -0.815180f, 0.503800f, 0.285714f, 0.080569f, 0.965392f, 0.247963f, -0.140629f, 0.890408f, 0.432844f, -0.353832f, 0.727531f, 0.587725f, 0.162450f, 0.850642f, 0.499985f, -0.059206f, 0.727531f, 0.683493f, -0.262856f, 0.525712f, 0.808985f, 0.019807f, 0.503800f, 0.863552f, 0.368175f, 0.890408f, 0.267495f, 0.449629f, 0.727531f, 0.518143f, 0.631733f, 0.727531f, 0.267495f, 0.688162f, 0.525712f, 0.499985f, 0.827448f, 0.503800f, 0.247963f, 0.957823f, 0.243049f, -0.153264f, 0.951048f, 0.000000f, -0.309000f, 0.859310f, 0.272408f, -0.432844f, 0.808985f, 0.008850f, -0.587756f, 0.677206f, 0.272408f, -0.683493f, 0.587756f, 0.000000f, -0.809015f, 0.441725f, 0.243049f, -0.863582f, 0.150212f, 0.243049f, -0.958281f, 0.000000f, 0.000000f, -1.000000f, -0.146123f, 0.272408f, -0.951018f, -0.309000f, 0.008850f, -0.951018f, -0.440748f, 0.272408f, -0.855251f, -0.587756f, 0.000000f, -0.809015f, -0.684805f, 0.243049f, -0.686972f, -0.864986f, 0.243049f, -0.438978f, -0.951048f, 0.000000f, -0.309000f, -0.949614f, 0.272408f, -0.154881f, -0.999939f, 0.008850f, 0.000000f, -0.951048f, 0.000000f, -0.309000f, -0.949614f, 0.272408f, -0.154881f, -0.949614f, 0.272408f, 0.154881f, -0.951048f, 0.000000f, 0.309000f, -0.864986f, 0.243049f, 0.438978f, -0.684805f, 0.243049f, 0.686972f, -0.587756f, 0.000000f, 0.809015f, -0.440779f, 0.272408f, 0.855251f, -0.309000f, 0.008850f, 0.951018f, -0.146123f, 0.272408f, 0.950987f, 0.000000f, 0.000000f, 1.000000f, 0.150212f, 0.243049f, 0.958281f, 0.441725f, 0.243049f, 0.863582f, 0.587786f, 0.000000f, 0.809015f, 0.677206f, 0.272408f, 0.683493f, 0.808985f, 0.008850f, 0.587756f, 0.859310f, 0.272408f, 0.432844f, 0.951048f, 0.000000f, 0.309000f, 0.957823f, 0.243049f, 0.153264f, 0.309000f, -0.008850f, -0.951018f, 0.440748f, -0.272408f, -0.855251f, 0.146123f, -0.272408f, -0.950987f, 0.262856f, -0.525712f, -0.808985f, -0.019807f, -0.503800f, -0.863552f, -0.808985f, -0.008850f, -0.587756f, -0.677206f, -0.272408f, -0.683493f, -0.859310f, -0.272408f, -0.432844f, -0.957823f, -0.243049f, -0.153264f, -0.688162f, -0.525712f, -0.499985f, -0.827418f, -0.503800f, -0.247963f, -0.827418f, -0.503800f, -0.247963f, -0.808985f, -0.008850f, 0.587756f, -0.859310f, -0.272408f, 0.432844f, -0.677206f, -0.272408f, 0.683493f, -0.688162f, -0.525712f, 0.499985f, -0.491531f, -0.503800f, 0.710288f, 0.309000f, -0.008850f, 0.951018f, 0.146123f, -0.272408f, 0.950987f, 0.440748f, -0.272408f, 0.855251f, 0.262856f, -0.525712f, 0.808985f, 0.523637f, -0.503800f, 0.686972f, 0.999939f, -0.008850f, 0.000000f, 0.949614f, -0.272408f, 0.154881f, 0.949614f, -0.272408f, -0.154881f, 0.850642f, -0.525712f, 0.000000f, 0.815180f, -0.503800f, -0.285714f, 0.604205f, -0.664968f, -0.438978f, 0.425306f, -0.850642f, -0.309000f, 0.353832f, -0.727531f, -0.587756f, 0.140629f, -0.890408f, -0.432844f, 0.059206f, -0.727531f, -0.683493f, -0.162450f, -0.850642f, -0.499985f, -0.230781f, -0.664968f, -0.710288f, -0.449629f, -0.727531f, -0.518143f, -0.368206f, -0.890408f, -0.267495f, -0.631733f, -0.727531f, -0.267495f, -0.525712f, -0.850642f, 0.000000f, -0.525712f, -0.850642f, 0.000000f, -0.746849f, -0.664937f, 0.000000f, -0.631733f, -0.727531f, -0.267495f, -0.631733f, -0.727531f, 0.267495f, -0.260750f, -0.965392f, 0.000000f, -0.368206f, -0.890408f, 0.267495f, -0.449629f, -0.727531f, 0.518143f, -0.080569f, -0.965392f, 0.247963f, -0.162450f, -0.850642f, 0.499985f, -0.230781f, -0.664968f, 0.710288f, 0.668325f, -0.727531f, -0.154881f, 0.668325f, -0.727531f, 0.154881f, 0.455123f, -0.890408f, 0.000000f, 0.425306f, -0.850642f, 0.309000f, 0.059206f, -0.727531f, 0.683493f, 0.140629f, -0.890408f, 0.432844f, 0.353832f, -0.727531f, 0.587756f, 0.210944f, -0.965392f, 0.153233f,
        };
        mNormBuff = fillBuffer(OBJECT_NORMS);
    }

    private void setIndices() {
        short[] OBJECT_INDICES = {
                0, 1, 2, 3, 4, 5, 0, 2, 6, 0, 6, 7, 0, 7, 8, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 9, 22, 10, 12, 23, 13, 15, 24, 16, 18, 25, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 42, 41, 47, 45, 42, 46, 43, 46, 48, 43, 45, 47, 46, 47, 49, 46, 46, 49, 48, 49, 38, 48, 41, 40, 47, 40, 50, 47, 47, 50, 49, 50, 51, 49, 49, 51, 38, 51, 36, 38, 43, 52, 44, 48, 53, 43, 38, 54, 48, 43, 53, 52, 53, 55, 52, 48, 54, 53, 54, 56, 53, 53, 56, 55, 56, 35, 55, 38, 37, 54, 37, 57, 54, 54, 57, 56, 57, 58, 56, 56, 58, 35, 58, 33, 35, 52, 59, 44, 55, 60, 52, 35, 61, 55, 52, 62, 59, 62, 63, 59, 55, 61, 60, 64, 65, 62, 62, 65, 63, 65, 32, 63, 35, 34, 61, 66, 67, 64, 64, 67, 65, 67, 68, 65, 65, 68, 32, 68, 30, 32, 59, 69, 44, 63, 70, 59, 32, 71, 63, 59, 70, 69, 70, 72, 69, 63, 71, 70, 71, 73, 70, 70, 73, 72, 73, 29, 72, 32, 31, 71, 31, 74, 71, 71, 74, 73, 74, 75, 73, 73, 75, 29, 75, 27, 29, 69, 42, 44, 72, 76, 69, 29, 77, 72, 69, 76, 42, 76, 45, 42, 72, 77, 76, 77, 78, 76, 76, 78, 45, 78, 41, 45, 29, 28, 77, 28, 79, 77, 77, 79, 78, 79, 80, 78, 78, 80, 41, 80, 39, 41, 81, 40, 39, 82, 83, 81, 26, 84, 82, 81, 83, 40, 83, 50, 40, 82, 84, 83, 84, 85, 83, 83, 85, 50, 85, 51, 50, 26, 21, 84, 21, 86, 84, 84, 86, 85, 86, 87, 85, 85, 87, 51, 87, 36, 51, 88, 37, 36, 89, 90, 88, 25, 91, 89, 88, 90, 37, 90, 57, 37, 89, 91, 90, 91, 92, 90, 90, 92, 57, 92, 58, 57, 25, 18, 91, 18, 93, 91, 91, 93, 92, 93, 94, 92, 92, 94, 58, 94, 33, 58, 95, 34, 33, 96, 97, 95, 24, 98, 99, 95, 97, 34, 100, 67, 66, 99, 98, 100, 98, 101, 100, 100, 101, 67, 101, 68, 67, 24, 15, 98, 15, 102, 98, 98, 102, 101, 102, 103, 101, 101, 103, 68, 103, 30, 68, 104, 31, 30, 105, 106, 104, 23, 107, 105, 104, 106, 31, 106, 74, 31, 105, 107, 106, 107, 108, 106, 106, 108, 74, 108, 75, 74, 23, 12, 107, 12, 109, 107, 107, 109, 108, 109, 110, 108, 108, 110, 75, 110, 27, 75, 111, 28, 27, 112, 113, 111, 22, 114, 112, 111, 113, 28, 113, 79, 28, 112, 114, 113, 114, 115, 113, 113, 115, 79, 115, 80, 79, 22, 9, 114, 9, 116, 114, 114, 116, 115, 116, 117, 115, 115, 117, 80, 117, 39, 80, 87, 88, 36, 86, 118, 87, 21, 119, 86, 87, 118, 88, 118, 89, 88, 86, 119, 118, 119, 120, 118, 118, 120, 89, 120, 25, 89, 21, 20, 119, 20, 121, 119, 119, 121, 120, 121, 122, 120, 120, 122, 25, 122, 16, 25, 94, 95, 33, 93, 123, 94, 18, 124, 93, 94, 123, 95, 123, 96, 95, 93, 124, 123, 124, 125, 123, 123, 125, 96, 125, 126, 96, 18, 17, 124, 17, 127, 124, 124, 127, 125, 127, 128, 125, 125, 128, 126, 129, 13, 24, 103, 104, 30, 102, 130, 103, 15, 131, 102, 103, 130, 104, 130, 105, 104, 102, 131, 130, 131, 132, 130, 130, 132, 105, 132, 23, 105, 15, 14, 131, 14, 133, 131, 131, 133, 132, 133, 134, 132, 132, 134, 23, 134, 10, 23, 110, 111, 27, 109, 135, 110, 12, 136, 109, 110, 135, 111, 135, 112, 111, 109, 136, 135, 136, 137, 135, 135, 137, 112, 137, 22, 112, 12, 11, 136, 11, 138, 136, 136, 138, 137, 138, 139, 137, 137, 139, 22, 139, 3, 22, 117, 81, 39, 116, 140, 117, 9, 141, 116, 117, 140, 81, 140, 82, 81, 116, 141, 140, 141, 142, 140, 140, 142, 82, 142, 26, 82, 9, 5, 141, 5, 143, 141, 141, 143, 142, 143, 144, 142, 142, 144, 26, 144, 19, 26, 145, 20, 19, 146, 147, 145, 8, 148, 146, 145, 147, 20, 147, 121, 20, 146, 148, 147, 148, 149, 147, 147, 149, 121, 149, 122, 121, 8, 7, 148, 7, 150, 148, 148, 150, 149, 150, 151, 149, 149, 151, 122, 151, 16, 122, 151, 17, 16, 150, 152, 151, 7, 153, 150, 151, 152, 17, 152, 127, 17, 150, 153, 152, 153, 154, 152, 152, 154, 127, 154, 128, 127, 7, 6, 153, 6, 155, 153, 153, 155, 154, 156, 157, 158, 158, 157, 129, 157, 13, 129, 157, 14, 13, 156, 159, 157, 160, 161, 156, 157, 159, 14, 159, 133, 14, 156, 161, 159, 161, 162, 159, 159, 162, 133, 162, 134, 133, 160, 163, 161, 163, 164, 161, 161, 164, 162, 164, 165, 162, 162, 165, 134, 165, 10, 134, 144, 145, 19, 143, 166, 144, 5, 167, 143, 144, 166, 145, 166, 146, 145, 143, 167, 166, 167, 168, 166, 166, 168, 146, 168, 8, 146, 5, 4, 167, 4, 169, 167, 167, 169, 168, 169, 1, 168, 168, 1, 8, 1, 0, 8, 165, 11, 10, 164, 170, 165, 163, 171, 164, 165, 170, 11, 170, 138, 11, 164, 171, 170, 171, 172, 170, 170, 172, 138, 172, 139, 138, 163, 173, 171, 173, 169, 171, 171, 169, 172, 169, 4, 172, 172, 4, 139, 4, 3, 139,
        };
        mIndBuff = fillBuffer(OBJECT_INDICES);
        indicesNumber = OBJECT_INDICES.length;
    }

    public int getNumObjectIndex() {
        return indicesNumber;
    }

    @Override
    public int getNumObjectVertex() {
        return verticesNumber;
    }

    @Override
    public Buffer getBuffer(BUFFER_TYPE bufferType) {
        Buffer result = null;
        switch (bufferType)
        {
            case BUFFER_TYPE_VERTEX:
                result = mVertBuff;
                break;
            case BUFFER_TYPE_TEXTURE_COORD:
                result = mTexCoordBuff;
                break;
            case BUFFER_TYPE_NORMALS:
                result = mNormBuff;
                break;
            case BUFFER_TYPE_INDICES:
                result = mIndBuff;
            default:
                break;
        }
        return result;
    }
}
